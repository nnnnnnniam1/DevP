<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">

    <!--  리더 - 멤버페이지  -->

    <!--  프로젝트 멤버리스트 불러오기  -->
    <select id="getMemberList" resultType="Member">
        SELECT u.name AS userName, u.id AS userId, u.email,
            p.leader, pg.position, pg.role, pg.progress, pg.status
        FROM projectgroup AS pg
        JOIN user AS u
        JOIN project AS p
        ON pg.userId = u.id
        WHERE pg.projectId = #{projectId} AND p.projectId = #{projectId} AND NOT pg.status = "x";
    </select>

    <!-- 프로젝트 멤버 존재여부 확인 -->
    <select id="findMember" resultType="Member">
        SELECT * FROM projectgroup WHERE projectId=#{projectId} AND userId=#{userId}
    </select>
    <!-- 프로젝트 멤버추가   -->
    <insert id="insertMember">
        INSERT into projectgroup( projectId, userId, status)
        VALUES (#{projectId},#{userId},#{status})
    </insert>

    <!-- 이전에 삭제된 멤버 다시 추가 -->
    <update id="updateMemberToken">
        UPDATE projectgroup SET status=#{status}
        WHERE userId=#{userId} AND projectId=#{projectId}
    </update>

    <!--  대기 중인 멤버 정보 가져오기  -->
    <select id="getMemberByToken" resultType="Member">
        SELECT * FROM projectgroup WHERE status=#{status}
    </select>

    <!--  프로젝트 멤버 참가 상태 변경 -->
    <update id="updateMemberStatus">
        UPDATE projectgroup SET status="1" WHERE status=#{status}
    </update>

    <!--  프로젝트 멤버 데이터 변경 -->
    <update id="updateMemberDatas">
        UPDATE projectgroup
        SET role=#{role},position=#{position}
        WHERE projectId=#{projectId} AND userId=#{userId}
    </update>

    <!--  프로젝트 멤버 삭제(상태 변경)  -->
    <update id="deleteMember">
        UPDATE projectgroup SET status="x" WHERE projectId=#{projectId} AND userId=#{userId}
    </update>


    <!--  프로젝트 - 멤버페이지  -->
    <select id="getProjectMemberList" resultType="Member">
        SELECT
            u.name AS userName,
            u.id AS userId,
            CASE WHEN
                p.leader = userId THEN 'Y'
            ELSE '' END AS leader,
            pg.position,
            pg.role,
            pg.progress,
            pg.status
        FROM projectgroup AS pg
        JOIN user AS u ON pg.userId = u.id
        JOIN project AS p ON pg.projectId = p.projectId
        WHERE pg.projectId = #{projectId} AND pg.status = '1' AND u.id != #{userId};
    </select>
</mapper>